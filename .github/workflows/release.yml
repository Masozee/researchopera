name: Automated Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Read version and codename
        id: version
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Generate Release Notes
        id: changelog
        run: |
          echo 'RELEASE_NOTES<<EOF' >> $GITHUB_ENV
          awk '/^## /{f=0} /^## \['"$VERSION"'\]/{f=1} f' CHANGELOG.md >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ env.VERSION }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Optional: Build and push Docker images (requires registry credentials)
      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Build and Push Backend Image
      #   run: |
      #     docker build -t yourrepo/researchopera-backend:${{ env.VERSION }} ./backend
      #     docker push yourrepo/researchopera-backend:${{ env.VERSION }}
      # - name: Build and Push Frontend Image
      #   run: |
      #     docker build -t yourrepo/researchopera-frontend:${{ env.VERSION }} ./frontend
      #     docker push yourrepo/researchopera-frontend:${{ env.VERSION }}
